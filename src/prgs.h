#ifndef INCLUDE_6502_SNAKE_H_
#define INCLUDE_6502_SNAKE_H_

#include <stdint.h>

#define prog snake

// clang-format off
// Address  Hexdump   Dissassembly
// -------------------------------
static uint8_t example[] = {
    // $0600    a2 00     LDX #$00
    0xa2, 0x00,
    // $0602    a0 00     LDY #$00
    0xa0, 0x00,
    // $0604    8a        TXA
    0x8a,
    // $0605    99 00 02  STA $0200,Y
    0x99, 0x00, 0x02,
    // $0608    48        PHA
    0x48,
    // $0609    e8        INX
    0xe8,
    // $060a    c8        INY
    0xc8,
    // $060b    c0 10     CPY #$10
    0xc0, 0x10,
    // $060d    d0 f5     BNE $0604
    0xd0, 0xf5,
    // $060f    68        PLA
    0x68,
    // $0610    99 00 02  STA $0200,Y
    0x99, 0x00, 0x02,
    // $0613    c8        INY
    0xc8,
    // $0614    c0 20     CPY #$20
    0xc0, 0x20,
    // $0616    d0 f7     BNE $060f
    0xd0, 0xf7,
};
// clang-format on

static uint8_t example_2[] = {
    0xa9,
    0x03,
    0x4c,
    0x08,
    0x06,
    0x00,
    0x00,
    0x00,
    0x8d,
    0x00,
    0x02,
};

static uint8_t example_3[] = {
    0x20,
    0x09,
    0x06,
    0x20,
    0x0c,
    0x06,
    0x20,
    0x12,
    0x06,
    0xa2,
    0x00,
    0x60,
    0xe8,
    0xe0,
    0x05,
    0xd0,
    0xfb,
    0x60,
    0x00,
};

static uint8_t example_indirect_x[] = {
    0xa2,
    0x01,
    0xa9,
    0x05,
    0x85,
    0x01,
    0xa9,
    0x07,
    0x85,
    0x02,
    0xa0,
    0x0a,
    0x8c,
    0x05,
    0x07,
    0xa1,
    0x00,
};

static uint8_t example_indirect_y[] = {
    0xa0,
    0x01,
    0xa9,
    0x03,
    0x85,
    0x01,
    0xa9,
    0x07,
    0x85,
    0x02,
    0xa2,
    0x0a,
    0x8e,
    0x04,
    0x07,
    0xb1,
    0x01,
};


static uint8_t snake[] = {
        /* $0600 */ 0x20, 0x06, 0x06,  // JSR $0606
    /* $0603 */ 0x20, 0x38, 0x06,  // JSR $0638
    /* $0606 */ 0x20, 0x0d, 0x06,  // JSR $060d
    /* $0609 */ 0x20, 0x2a, 0x06,  // JSR $062a
    /* $060c */ 0x60,  // RTS
    /* $060d */ 0xa9, 0x02,  // LDA #$02
    /* $060f */ 0x85, 0x02,  // STA $02
    /* $0611 */ 0xa9, 0x04,  // LDA #$04
    /* $0613 */ 0x85, 0x03,  // STA $03
    /* $0615 */ 0xa9, 0x11,  // LDA #$11
    /* $0617 */ 0x85, 0x10,  // STA $10
    /* $0619 */ 0xa9, 0x10,  // LDA #$10
    /* $061b */ 0x85, 0x12,  // STA $12
    /* $061d */ 0xa9, 0x0f,  // LDA #$0f
    /* $061f */ 0x85, 0x14,  // STA $14
    /* $0621 */ 0xa9, 0x04,  // LDA #$04
    /* $0623 */ 0x85, 0x11,  // STA $11
    /* $0625 */ 0x85, 0x13,  // STA $13
    /* $0627 */ 0x85, 0x15,  // STA $15
    /* $0629 */ 0x60,  // RTS
    /* $062a */ 0xa5, 0xfe,  // LDA $fe
    /* $062c */ 0x85, 0x00,  // STA $00
    /* $062e */ 0xa5, 0xfe,  // LDA $fe
    /* $0630 */ 0x29, 0x03,  // AND #$03
    /* $0632 */ 0x18,  // CLC
    /* $0633 */ 0x69, 0x02,  // ADC #$02
    /* $0635 */ 0x85, 0x01,  // STA $01
    /* $0637 */ 0x60,  // RTS
    /* $0638 */ 0x20, 0x4d, 0x06,  // JSR $064d
    /* $063b */ 0x20, 0x8d, 0x06,  // JSR $068d
    /* $063e */ 0x20, 0xc3, 0x06,  // JSR $06c3
    /* $0641 */ 0x20, 0x19, 0x07,  // JSR $0719
    /* $0644 */ 0x20, 0x20, 0x07,  // JSR $0720
    /* $0647 */ 0x20, 0x2d, 0x07,  // JSR $072d
    /* $064a */ 0x4c, 0x38, 0x06,  // JMP $0638
    /* $064d */ 0xa5, 0xff,  // LDA $ff
    /* $064f */ 0xc9, 0x77,  // CMP #$77
    /* $0651 */ 0xf0, 0x0d,  // BEQ $0660
    /* $0653 */ 0xc9, 0x64,  // CMP #$64
    /* $0655 */ 0xf0, 0x14,  // BEQ $066b
    /* $0657 */ 0xc9, 0x73,  // CMP #$73
    /* $0659 */ 0xf0, 0x1b,  // BEQ $0676
    /* $065b */ 0xc9, 0x61,  // CMP #$61
    /* $065d */ 0xf0, 0x22,  // BEQ $0681
    /* $065f */ 0x60,  // RTS
    /* $0660 */ 0xa9, 0x04,  // LDA #$04
    /* $0662 */ 0x24, 0x02,  // BIT $02
    /* $0664 */ 0xd0, 0x26,  // BNE $068c
    /* $0666 */ 0xa9, 0x01,  // LDA #$01
    /* $0668 */ 0x85, 0x02,  // STA $02
    /* $066a */ 0x60,  // RTS
    /* $066b */ 0xa9, 0x08,  // LDA #$08
    /* $066d */ 0x24, 0x02,  // BIT $02
    /* $066f */ 0xd0, 0x1b,  // BNE $068c
    /* $0671 */ 0xa9, 0x02,  // LDA #$02
    /* $0673 */ 0x85, 0x02,  // STA $02
    /* $0675 */ 0x60,  // RTS
    /* $0676 */ 0xa9, 0x01,  // LDA #$01
    /* $0678 */ 0x24, 0x02,  // BIT $02
    /* $067a */ 0xd0, 0x10,  // BNE $068c
    /* $067c */ 0xa9, 0x04,  // LDA #$04
    /* $067e */ 0x85, 0x02,  // STA $02
    /* $0680 */ 0x60,  // RTS
    /* $0681 */ 0xa9, 0x02,  // LDA #$02
    /* $0683 */ 0x24, 0x02,  // BIT $02
    /* $0685 */ 0xd0, 0x05,  // BNE $068c
    /* $0687 */ 0xa9, 0x08,  // LDA #$08
    /* $0689 */ 0x85, 0x02,  // STA $02
    /* $068b */ 0x60,  // RTS
    /* $068c */ 0x60,  // RTS
    /* $068d */ 0x20, 0x94, 0x06,  // JSR $0694
    /* $0690 */ 0x20, 0xa8, 0x06,  // JSR $06a8
    /* $0693 */ 0x60,  // RTS
    /* $0694 */ 0xa5, 0x00,  // LDA $00
    /* $0696 */ 0xc5, 0x10,  // CMP $10
    /* $0698 */ 0xd0, 0x0d,  // BNE $06a7
    /* $069a */ 0xa5, 0x01,  // LDA $01
    /* $069c */ 0xc5, 0x11,  // CMP $11
    /* $069e */ 0xd0, 0x07,  // BNE $06a7
    /* $06a0 */ 0xe6, 0x03,  // INC $03
    /* $06a2 */ 0xe6, 0x03,  // INC $03
    /* $06a4 */ 0x20, 0x2a, 0x06,  // JSR $062a
    /* $06a7 */ 0x60,  // RTS
    /* $06a8 */ 0xa2, 0x02,  // LDX #$02
    /* $06aa */ 0xb5, 0x10,  // LDA $10,X
    /* $06ac */ 0xc5, 0x10,  // CMP $10
    /* $06ae */ 0xd0, 0x06,  // BNE $06b6
    /* $06b0 */ 0xb5, 0x11,  // LDA $11,X
    /* $06b2 */ 0xc5, 0x11,  // CMP $11
    /* $06b4 */ 0xf0, 0x09,  // BEQ $06bf
    /* $06b6 */ 0xe8,  // INX
    /* $06b7 */ 0xe8,  // INX
    /* $06b8 */ 0xe4, 0x03,  // CPX $03
    /* $06ba */ 0xf0, 0x06,  // BEQ $06c2
    /* $06bc */ 0x4c, 0xaa, 0x06,  // JMP $06aa
    /* $06bf */ 0x4c, 0x35, 0x07,  // JMP $0735
    /* $06c2 */ 0x60,  // RTS
    /* $06c3 */ 0xa6, 0x03,  // LDX $03
    /* $06c5 */ 0xca,  // DEX
    /* $06c6 */ 0x8a,  // TXA
    /* $06c7 */ 0xb5, 0x10,  // LDA $10,X
    /* $06c9 */ 0x95, 0x12,  // STA $12,X
    /* $06cb */ 0xca,  // DEX
    /* $06cc */ 0x10, 0xf9,  // BPL $06c7
    /* $06ce */ 0xa5, 0x02,  // LDA $02
    /* $06d0 */ 0x4a,  // LSR A
    /* $06d1 */ 0xb0, 0x09,  // BCS $06dc
    /* $06d3 */ 0x4a,  // LSR A
    /* $06d4 */ 0xb0, 0x19,  // BCS $06ef
    /* $06d6 */ 0x4a,  // LSR A
    /* $06d7 */ 0xb0, 0x1f,  // BCS $06f8
    /* $06d9 */ 0x4a,  // LSR A
    /* $06da */ 0xb0, 0x2f,  // BCS $070b
    /* $06dc */ 0xa5, 0x10,  // LDA $10
    /* $06de */ 0x38,  // SEC
    /* $06df */ 0xe9, 0x20,  // SBC #$20
    /* $06e1 */ 0x85, 0x10,  // STA $10
    /* $06e3 */ 0x90, 0x01,  // BCC $06e6
    /* $06e5 */ 0x60,  // RTS
    /* $06e6 */ 0xc6, 0x11,  // DEC $11
    /* $06e8 */ 0xa9, 0x01,  // LDA #$01
    /* $06ea */ 0xc5, 0x11,  // CMP $11
    /* $06ec */ 0xf0, 0x28,  // BEQ $0716
    /* $06ee */ 0x60,  // RTS
    /* $06ef */ 0xe6, 0x10,  // INC $10
    /* $06f1 */ 0xa9, 0x1f,  // LDA #$1f
    /* $06f3 */ 0x24, 0x10,  // BIT $10
    /* $06f5 */ 0xf0, 0x1f,  // BEQ $0716
    /* $06f7 */ 0x60,  // RTS
    /* $06f8 */ 0xa5, 0x10,  // LDA $10
    /* $06fa */ 0x18,  // CLC
    /* $06fb */ 0x69, 0x20,  // ADC #$20
    /* $06fd */ 0x85, 0x10,  // STA $10
    /* $06ff */ 0xb0, 0x01,  // BCS $0702
    /* $0701 */ 0x60,  // RTS
    /* $0702 */ 0xe6, 0x11,  // INC $11
    /* $0704 */ 0xa9, 0x06,  // LDA #$06
    /* $0706 */ 0xc5, 0x11,  // CMP $11
    /* $0708 */ 0xf0, 0x0c,  // BEQ $0716
    /* $070a */ 0x60,  // RTS
    /* $070b */ 0xc6, 0x10,  // DEC $10
    /* $070d */ 0xa5, 0x10,  // LDA $10
    /* $070f */ 0x29, 0x1f,  // AND #$1f
    /* $0711 */ 0xc9, 0x1f,  // CMP #$1f
    /* $0713 */ 0xf0, 0x01,  // BEQ $0716
    /* $0715 */ 0x60,  // RTS
    /* $0716 */ 0x4c, 0x35, 0x07,  // JMP $0735
    /* $0719 */ 0xa0, 0x00,  // LDY #$00
    /* $071b */ 0xa5, 0xfe,  // LDA $fe
    /* $071d */ 0x91, 0x00,  // STA ($00),Y
    /* $071f */ 0x60,  // RTS
    /* $0720 */ 0xa6, 0x03,  // LDX $03
    /* $0722 */ 0xa9, 0x00,  // LDA #$00
    /* $0724 */ 0x81, 0x10,  // STA ($10,X)
    /* $0726 */ 0xa2, 0x00,  // LDX #$00
    /* $0728 */ 0xa9, 0x01,  // LDA #$01
    /* $072a */ 0x81, 0x10,  // STA ($10,X)
    /* $072c */ 0x60,  // RTS
    /* $072d */ 0xa2, 0x00,  // LDX #$00
    /* $072f */ 0xea,  // NOP
    /* $0730 */ 0xea,  // NOP
    /* $0731 */ 0xca,  // DEX
    /* $0732 */ 0xd0, 0xfb,  // BNE $072f
    /* $0734 */ 0x60,  // RTS
};

#endif // INCLUDE_6502_SNAKE_H_
